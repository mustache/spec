{"overview":"Pipe tags represent context items that should be rendered as JSON.\nThe tags content may contain the name of any context which is \nrenderable as JSON.\n\nPipe tags should follow the same name resolution rules as sections\nto determine the appropriate context to render as JSON.\n\nPipe tags SHOULD be treated as standalone when appropriate.\n","tests":[{"name":"Pipe tags - Objects and Hashes","data":{"foo":{"bar":"baz"}},"expected":"var data = {\"bar\":\"baz\"};","template":"var data = {{|foo}};","desc":"Pipe tags should render objects and hashes as JSON objects."},{"name":"Pipe tags - Strings","data":{"foo":"bar"},"expected":"var data = [\"bar\"];","template":"var data = {{|foo}};","desc":"Pipe tags should render strings as a list of strings."},{"name":"Pipe tags - Lists","data":{"foo":[{"bar":"baz"},{"bar":"fight"}]},"expected":"var data = [{ bar: \"baz\" }, { bar: \"fight\" }];","template":"var data = {{|foo}};","desc":"Pipe tags should render lists as lists."},{"name":"Pipe tags - Falsy","data":{"foo":false},"expected":"var data = [];","template":"var data = {{|foo}};","desc":"Pipe tags should render false values as empty lists."},{"name":"Pipe tags - Unrenderables","data":{"lambda":{"__tag__":"code","php":"return \"world\";","clojure":"(fn [] \"world\")","perl":"sub { \"world\" }","python":"lambda: \"world\"","ruby":"proc { \"world\" }","js":"function() { return \"world\" }"}},"expected":"var data = [];","template":"var data = {{|lambda}};","desc":"Pipe tags should render unrenderable items as empty lists."}],"__ATTN__":"Do not edit this file; changes belong in the appropriate YAML file."}